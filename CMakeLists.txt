project(PoroElasticity)

cmake_minimum_required(VERSION 2.6)

# Add local modules
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH}
                      ${PROJECT_SOURCE_DIR}/../../cmake/Modules)

if(NOT IFEM_CONFIGURED)
  find_package(IFEM REQUIRED)
  include_directories(${IFEM_INCLUDE_DIRS})
  add_definitions(${IFEM_DEFINITIONS})
endif()

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${IFEM_CXX_FLAGS}")

# Generate regtest script with correct paths
configure_file(${IFEM_REGTEST_SCRIPT} regtest.sh)

include_directories(${IFEM_INCLUDES} ../Common ${PROJECT_SOURCE_DIR})

if(NOT TARGET Elasticity)
  add_subdirectory(../Elasticity Elasticity)
endif()

set(PoroElasticity_SRCS PoroElasticity.C PoroMaterial.C)

add_library(CommonPoro STATIC ${PoroElasticity_SRCS})
target_link_libraries(CommonPoro Elasticity)

set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin)

add_executable(PoroElasticity main_PoroElasticity.C)
target_link_libraries(PoroElasticity CommonPoro Elasticity ${IFEM_LIBRARIES})

# Installation
install(TARGETS PoroElasticity DESTINATION bin COMPONENT bin)

enable_testing()
include(IFEMTesting)

# Regression tests
if(IFEM_USE_PARALLEL_PETSC)
  # Add parallel tests here
else()
  ifem_add_test(Plaxis1DVerif.reg PoroElasticity)
  ifem_add_test(Plaxis1DVerif-nonmixed.reg PoroElasticity)
  ifem_add_test(OGSBenchmark1D.reg PoroElasticity)
  ifem_add_test(OGSBenchmark1D-nonmixed.reg PoroElasticity)
  if(LRSpline_FOUND)
    ifem_add_test(Plaxis1DVerif-LR.reg PoroElasticity)
    ifem_add_test(OGSBenchmark1D-LR.reg PoroElasticity)
  endif()
endif()
list(APPEND TEST_APPS PoroElasticity)

# Unit tests
IFEM_add_test_app(${PROJECT_SOURCE_DIR}/Test/*.C
                  ${PROJECT_SOURCE_DIR}/Test
                  PoroElasticity
                  CommonPoro Elasticity ${IFEM_LIBRARIES})

if(IFEM_COMMON_APP_BUILD)
  set(TEST_APPS ${TEST_APPS} PARENT_SCOPE)
  set(UNIT_TEST_NUMBER ${UNIT_TEST_NUMBER} PARENT_SCOPE)
else()
  add_check_target()
endif()
